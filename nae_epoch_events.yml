---
# This playbook queries the API for all events that belong to
# an epoch for a specified severity.

- name: GET EVENTS FOR AN EPOCH
  hosts: nae-devnet

  # This file provides the session tokens obtained after authentication
  # against the API. Run nae_api_login.yml to (re)generate the file.
  vars_files: vars/session.yml

  vars:
    # Unique ID for the Epoch to query. It can be found in the
    # nae_fabric_epochs report.
    epoch_id: "d9e15b75-bf1a9847-7a1a-3623-824b-a91dd97b627c"
    # EVENT_SEVERITY_CRITICAL, EVENT_SEVERITY_MAJOR, EVENT_SEVERITY_MINOR,
    # EVENT_SEVERITY_WARNING, EVENT_SEVERITY_INFO. A comma separated list
    # of two or more severities is allowed.
    severity: "EVENT_SEVERITY_CRITICAL"
    # Number of results per page (default 50, max 200)
    results: 30

  tasks:

    # Query for all events that match the criteria. Results will be paged
    # according to the provided page size, so we're interested in the number
    # of pages here.
    - name: Query the NAE API
      uri:
        url: "{{ nae.url }}/api/v1/event-services/smart-events?\
                $epoch_id={{ epoch_id }}&\
                severity={{ severity }}&\
                $size={{ results }}"
        method: "GET"
        headers: "{{ headers }}"
        return_content: true
      register: nae_events
      delegate_to: localhost

    - debug:
        msg: "Total events matching criteria:
              {{ nae_events.json.value.data_summary.total_count }} in
              {{ nae_events.json.value.data_summary.total_page_count }}
              pages."

    # Loop over all pages to retrieve the full search results
    - name: Query the NAE API
      uri:
        url: "{{ nae.url }}/api/v1/event-services/smart-events?\
                $epoch_id={{ epoch_id }}&\
                severity={{ severity }}&\
                $size={{ results }}"
        method: "GET"
        headers: "{{ headers }}"
        return_content: true
      register: nae_epoch_events
      delegate_to: localhost
      loop: "{{ range(0, nae_events.json.value.data_summary.total_page_count) | list }}"
      loop_control:
        label: "Page {{ item + 1 }} out of {{ nae_events.json.value.data_summary.total_page_count }}"


    # Builds a text report from a Jinja2 template and
    # the data returned by the API call.
    - name: Create report
      template:
        src: "nae_epoch_events.j2"
        dest: "output/nae_epoch_events.txt"
      delegate_to: localhost

    # Print the contents of the file to the terminal
    - name: Print report to terminal
      debug:
        msg: "{{ lookup('file', 'output/nae_epoch_events.txt') }}"
